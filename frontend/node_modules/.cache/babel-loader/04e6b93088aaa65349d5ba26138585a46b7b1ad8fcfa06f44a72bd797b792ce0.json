{"ast":null,"code":"var _jsxFileName = \"/Users/ash/Desktop/AshProjects/whisperPPT/frontend/src/Components/LandingPage.js\";\nimport React from 'react';\nimport { Typography, Button, Container, Box, Paper } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = styled('input')({\n  display: 'none'\n});\n_c = Input;\nconst GradientBackground = styled('div')({\n  minHeight: '100vh',\n  background: 'radial-gradient(circle at center, #1e88e5 10%, #42a5f5 40%, #81d4fa 80%)',\n  //background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n});\n_c2 = GradientBackground;\nconst LandingPage = _ref => {\n  let {\n    onUpload\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(GradientBackground, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mt: 6,\n          mb: 3,\n          p: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          boxShadow: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          children: \"Audio to Text Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          gutterBottom: true,\n          color: \"text.secondary\",\n          children: \"Upload an audio file and get it transcribed using OpenAI's Whisper API.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"upload-button\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"upload-button\",\n              type: \"file\",\n              accept: \"audio/*\",\n              onChange: onUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              component: \"span\",\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c3 = LandingPage;\nexport default LandingPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"GradientBackground\");\n$RefreshReg$(_c3, \"LandingPage\");","map":{"version":3,"names":["React","Typography","Button","Container","Box","Paper","styled","jsxDEV","_jsxDEV","Input","display","_c","GradientBackground","minHeight","background","alignItems","justifyContent","_c2","LandingPage","_ref","onUpload","children","maxWidth","sx","mt","mb","p","flexDirection","boxShadow","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","htmlFor","id","type","accept","onChange","_c3","$RefreshReg$"],"sources":["/Users/ash/Desktop/AshProjects/whisperPPT/frontend/src/Components/LandingPage.js"],"sourcesContent":["import React from 'react';\nimport {\n  Typography,\n  Button,\n  Container,\n  Box,\n  Paper,\n} from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst Input = styled('input')({\n  display: 'none',\n});\n\nconst GradientBackground = styled('div')({\n  minHeight: '100vh',\n   background: 'radial-gradient(circle at center, #1e88e5 10%, #42a5f5 40%, #81d4fa 80%)',\n  //background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\n\nconst LandingPage = ({ onUpload }) => {\n  return (\n    <GradientBackground>\n      <Container maxWidth=\"sm\">\n        <Paper\n          sx={{\n            mt: 6,\n            mb: 3,\n            p: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            boxShadow: 3,\n          }}\n        >\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            Audio to Text Converter\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            component=\"p\"\n            gutterBottom\n            color=\"text.secondary\"\n          >\n            Upload an audio file and get it transcribed using OpenAI's Whisper API.\n          </Typography>\n          <Box sx={{ mt: 2 }}>\n            <label htmlFor=\"upload-button\">\n              <Input\n                id=\"upload-button\"\n                type=\"file\"\n                accept=\"audio/*\"\n                onChange={onUpload}\n              />\n              <Button variant=\"contained\" component=\"span\">\n                Upload\n              </Button>\n            </label>\n          </Box>\n        </Paper>\n      </Container>\n    </GradientBackground>\n  );\n};\n\nexport default LandingPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
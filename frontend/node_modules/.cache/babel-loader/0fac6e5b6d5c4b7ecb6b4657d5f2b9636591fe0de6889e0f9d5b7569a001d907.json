{"ast":null,"code":"var _jsxFileName = \"/Users/ash/Desktop/AshProjects/whisperPPT/frontend/src/Components/Transcription.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transcription = _ref => {\n  _s();\n  let {\n    audioFile\n  } = _ref;\n  const [transcription, setTranscription] = useState(null);\n  useEffect(() => {\n    const getTranscription = async () => {\n      try {\n        const formData = new FormData();\n        formData.append('audio', audioFile);\n        const response = await axios.post('https://your-api-endpoint/whisper', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setTranscription(response.data.transcription);\n      } catch (error) {\n        console.error('Error getting transcription:', error);\n      }\n    };\n    if (audioFile) {\n      getTranscription();\n    }\n  }, [audioFile]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: transcription ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transcription:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: transcription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Processing your audio file...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Transcription, \"RSOfMQA1zhS9kyapxNTyljicLhQ=\");\n_c = Transcription;\nexport default Transcription;\nvar _c;\n$RefreshReg$(_c, \"Transcription\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Transcription","_ref","_s","audioFile","transcription","setTranscription","getTranscription","formData","FormData","append","response","post","headers","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ash/Desktop/AshProjects/whisperPPT/frontend/src/Components/Transcription.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nconst Transcription = ({ audioFile }) => {\n  const [transcription, setTranscription] = useState(null);\n\n  useEffect(() => {\n    const getTranscription = async () => {\n      try {\n        const formData = new FormData();\n        formData.append('audio', audioFile);\n\n        const response = await axios.post('https://your-api-endpoint/whisper', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            \n          }\n        });\n\n        setTranscription(response.data.transcription);\n      } catch (error) {\n        console.error('Error getting transcription:', error);\n      }\n    };\n\n    if (audioFile) {\n      getTranscription();\n    }\n  }, [audioFile]);\n\n  return (\n    <div>\n      {transcription ? (\n        <div>\n          <h2>Transcription:</h2>\n          <p>{transcription}</p>\n        </div>\n      ) : (\n        <p>Processing your audio file...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Transcription;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,aAAa,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAEC;EAAU,CAAC,GAAAF,IAAA;EAClC,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,SAAS,CAAC;QAEnC,MAAMO,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,mCAAmC,EAAEJ,QAAQ,EAAE;UAC/EK,OAAO,EAAE;YACP,cAAc,EAAE;UAElB;QACF,CAAC,CAAC;QAEFP,gBAAgB,CAACK,QAAQ,CAACG,IAAI,CAACT,aAAa,CAAC;MAC/C,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAED,IAAIX,SAAS,EAAE;MACbG,gBAAgB,EAAE;IACpB;EACF,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEf,oBACEJ,OAAA;IAAAiB,QAAA,EACGZ,aAAa,gBACZL,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACvBrB,OAAA;QAAAiB,QAAA,EAAIZ;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClB,gBAENrB,OAAA;MAAAiB,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACjC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAAClB,EAAA,CAvCIF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
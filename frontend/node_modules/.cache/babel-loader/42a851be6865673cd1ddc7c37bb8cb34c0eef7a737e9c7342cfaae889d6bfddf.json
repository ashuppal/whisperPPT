{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { ActionTypes } from './useListbox.types';\nimport defaultReducer from './defaultListboxReducer';\nimport useControllableReducer from './useControllableReducer';\nimport areArraysEqual from '../utils/areArraysEqual';\nimport useLatest from '../utils/useLatest';\nimport useTextNavigation from '../utils/useTextNavigation';\nconst defaultOptionComparer = (optionA, optionB) => optionA === optionB;\nconst defaultIsOptionDisabled = () => false;\nconst defaultOptionStringifier = option => typeof option === 'string' ? option : String(option);\n\n/**\n * @ignore - internal hook.\n *\n * The useListbox is a lower-level utility that is used to build a listbox component.\n * It's used to manage the state of the listbox and its options.\n * Contains the logic for keyboard navigation, selection, and focus management.\n */\nexport default function useListbox(props) {\n  var _props$optionIdGenera;\n  const {\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    focusManagement = 'activeDescendant',\n    id: idProp,\n    isOptionDisabled = defaultIsOptionDisabled,\n    listboxRef: externalListboxRef,\n    optionComparer = defaultOptionComparer,\n    optionStringifier = defaultOptionStringifier,\n    options,\n    stateReducer: externalReducer,\n    value: valueParam,\n    selectionLimit = null\n  } = props;\n  const id = useId(idProp);\n  const defaultIdGenerator = React.useCallback((_, index) => `${id}-option-${index}`, [id]);\n  const optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;\n  const propsWithDefaults = useLatest(_extends({}, props, {\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement,\n    isOptionDisabled,\n    optionComparer,\n    optionStringifier,\n    selectionLimit\n  }), [props]);\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(externalListboxRef, listboxRef);\n  const [{\n    highlightedValue,\n    selectedValues: selectedValue\n  }, dispatch] = useControllableReducer(defaultReducer, externalReducer, propsWithDefaults);\n  const handleTextNavigation = useTextNavigation((searchString, event) => dispatch({\n    type: ActionTypes.textNavigation,\n    event,\n    searchString\n  }));\n  React.useEffect(() => {\n    // if a controlled value changes, we need to update the state to keep things in sync\n    if (valueParam !== undefined && valueParam !== selectedValue) {\n      dispatch({\n        type: ActionTypes.setValue,\n        event: null,\n        value: valueParam\n      });\n    }\n  }, [valueParam, selectedValue, dispatch]);\n  const highlightedIndex = React.useMemo(() => {\n    return highlightedValue == null ? -1 : options.findIndex(option => optionComparer(option, highlightedValue));\n  }, [highlightedValue, options, optionComparer]);\n\n  // introducing refs to avoid recreating the getOptionState function on each change.\n  const latestSelectedValue = useLatest(selectedValue);\n  const latestHighlightedIndex = useLatest(highlightedIndex);\n  const previousOptions = React.useRef([]);\n  React.useEffect(() => {\n    if (areArraysEqual(previousOptions.current, options, optionComparer)) {\n      return;\n    }\n    dispatch({\n      type: ActionTypes.optionsChange,\n      event: null,\n      options,\n      previousOptions: previousOptions.current\n    });\n    previousOptions.current = options;\n  }, [options, optionComparer, dispatch]);\n  const setSelectedValue = React.useCallback(values => {\n    dispatch({\n      type: ActionTypes.setValue,\n      event: null,\n      value: values\n    });\n  }, [dispatch]);\n  const setHighlightedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setHighlight,\n      event: null,\n      highlight: option\n    });\n  }, [dispatch]);\n  const createHandleOptionClick = React.useCallback((option, other) => event => {\n    var _other$onClick;\n    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    event.preventDefault();\n    dispatch({\n      type: ActionTypes.optionClick,\n      option,\n      event\n    });\n  }, [dispatch]);\n  const createHandleOptionPointerOver = React.useCallback((option, other) => event => {\n    var _other$onMouseOver;\n    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ActionTypes.optionHover,\n      option,\n      event\n    });\n  }, [dispatch]);\n  const createHandleKeyDown = other => event => {\n    var _other$onKeyDown;\n    (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    const keysToPreventDefault = ['ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'];\n    if (focusManagement === 'activeDescendant') {\n      // When the child element is focused using the activeDescendant attribute,\n      // the listbox handles keyboard events on its behalf.\n      // We have to `preventDefault()` is this case to prevent the browser from\n      // scrolling the view when space is pressed or submitting forms when enter is pressed.\n      keysToPreventDefault.push(' ', 'Enter');\n    }\n    if (keysToPreventDefault.includes(event.key)) {\n      event.preventDefault();\n    }\n    dispatch({\n      type: ActionTypes.keyDown,\n      event\n    });\n    handleTextNavigation(event);\n  };\n  const createHandleBlur = other => event => {\n    var _other$onBlur, _listboxRef$current;\n    (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {\n      // focus is within the listbox\n      return;\n    }\n    dispatch({\n      type: ActionTypes.blur,\n      event\n    });\n  };\n  const getRootProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? optionIdGenerator(highlightedValue, highlightedIndex) : undefined,\n      id,\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers),\n      role: 'listbox',\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    });\n  };\n  const getOptionState = React.useCallback(option => {\n    var _latestSelectedValue$;\n    const index = options.findIndex(opt => optionComparer(opt, option));\n    const selected = ((_latestSelectedValue$ = latestSelectedValue.current) != null ? _latestSelectedValue$ : []).some(value => value != null && optionComparer(option, value));\n    const disabled = isOptionDisabled(option, index);\n    const highlighted = latestHighlightedIndex.current === index && index !== -1;\n    return {\n      disabled,\n      highlighted,\n      index,\n      selected\n    };\n  }, [options, isOptionDisabled, optionComparer, latestSelectedValue, latestHighlightedIndex]);\n  const getOptionTabIndex = React.useCallback(optionState => {\n    if (focusManagement === 'activeDescendant') {\n      return undefined;\n    }\n    if (!optionState.highlighted) {\n      return -1;\n    }\n    if (optionState.disabled && !disabledItemsFocusable) {\n      return -1;\n    }\n    return 0;\n  }, [focusManagement, disabledItemsFocusable]);\n  const getOptionProps = React.useCallback(function (option) {\n    let otherHandlers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const optionState = getOptionState(option);\n    return _extends({}, otherHandlers, {\n      'aria-disabled': optionState.disabled || undefined,\n      'aria-selected': optionState.selected,\n      id: optionIdGenerator(option, optionState.index),\n      onClick: createHandleOptionClick(option, otherHandlers),\n      onPointerOver: createHandleOptionPointerOver(option, otherHandlers),\n      role: 'option',\n      tabIndex: getOptionTabIndex(optionState)\n    });\n  }, [optionIdGenerator, createHandleOptionClick, createHandleOptionPointerOver, getOptionTabIndex, getOptionState]);\n  React.useDebugValue({\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue\n  });\n  return {\n    getRootProps,\n    getOptionProps,\n    getOptionState,\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue,\n    setSelectedValue,\n    setHighlightedValue\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","ActionTypes","defaultReducer","useControllableReducer","areArraysEqual","useLatest","useTextNavigation","defaultOptionComparer","optionA","optionB","defaultIsOptionDisabled","defaultOptionStringifier","option","String","useListbox","props","_props$optionIdGenera","disabledItemsFocusable","disableListWrap","focusManagement","id","idProp","isOptionDisabled","listboxRef","externalListboxRef","optionComparer","optionStringifier","options","stateReducer","externalReducer","value","valueParam","selectionLimit","defaultIdGenerator","useCallback","_","index","optionIdGenerator","propsWithDefaults","useRef","handleRef","highlightedValue","selectedValues","selectedValue","dispatch","handleTextNavigation","searchString","event","type","textNavigation","useEffect","undefined","setValue","highlightedIndex","useMemo","findIndex","latestSelectedValue","latestHighlightedIndex","previousOptions","current","optionsChange","setSelectedValue","values","setHighlightedValue","setHighlight","highlight","createHandleOptionClick","other","_other$onClick","onClick","call","defaultPrevented","preventDefault","optionClick","createHandleOptionPointerOver","_other$onMouseOver","onMouseOver","optionHover","createHandleKeyDown","_other$onKeyDown","onKeyDown","keysToPreventDefault","push","includes","key","keyDown","createHandleBlur","_other$onBlur","_listboxRef$current","onBlur","contains","document","activeElement","blur","getRootProps","otherHandlers","arguments","length","role","tabIndex","ref","getOptionState","_latestSelectedValue$","opt","selected","some","disabled","highlighted","getOptionTabIndex","optionState","getOptionProps","onPointerOver","useDebugValue","highlightedOption","selectedOption"],"sources":["/Users/ash/Desktop/AshProjects/whisperPPT/frontend/node_modules/@mui/base/useListbox/useListbox.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { ActionTypes } from './useListbox.types';\nimport defaultReducer from './defaultListboxReducer';\nimport useControllableReducer from './useControllableReducer';\nimport areArraysEqual from '../utils/areArraysEqual';\nimport useLatest from '../utils/useLatest';\nimport useTextNavigation from '../utils/useTextNavigation';\nconst defaultOptionComparer = (optionA, optionB) => optionA === optionB;\nconst defaultIsOptionDisabled = () => false;\nconst defaultOptionStringifier = option => typeof option === 'string' ? option : String(option);\n\n/**\n * @ignore - internal hook.\n *\n * The useListbox is a lower-level utility that is used to build a listbox component.\n * It's used to manage the state of the listbox and its options.\n * Contains the logic for keyboard navigation, selection, and focus management.\n */\nexport default function useListbox(props) {\n  var _props$optionIdGenera;\n  const {\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    focusManagement = 'activeDescendant',\n    id: idProp,\n    isOptionDisabled = defaultIsOptionDisabled,\n    listboxRef: externalListboxRef,\n    optionComparer = defaultOptionComparer,\n    optionStringifier = defaultOptionStringifier,\n    options,\n    stateReducer: externalReducer,\n    value: valueParam,\n    selectionLimit = null\n  } = props;\n  const id = useId(idProp);\n  const defaultIdGenerator = React.useCallback((_, index) => `${id}-option-${index}`, [id]);\n  const optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;\n  const propsWithDefaults = useLatest(_extends({}, props, {\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement,\n    isOptionDisabled,\n    optionComparer,\n    optionStringifier,\n    selectionLimit\n  }), [props]);\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(externalListboxRef, listboxRef);\n  const [{\n    highlightedValue,\n    selectedValues: selectedValue\n  }, dispatch] = useControllableReducer(defaultReducer, externalReducer, propsWithDefaults);\n  const handleTextNavigation = useTextNavigation((searchString, event) => dispatch({\n    type: ActionTypes.textNavigation,\n    event,\n    searchString\n  }));\n  React.useEffect(() => {\n    // if a controlled value changes, we need to update the state to keep things in sync\n    if (valueParam !== undefined && valueParam !== selectedValue) {\n      dispatch({\n        type: ActionTypes.setValue,\n        event: null,\n        value: valueParam\n      });\n    }\n  }, [valueParam, selectedValue, dispatch]);\n  const highlightedIndex = React.useMemo(() => {\n    return highlightedValue == null ? -1 : options.findIndex(option => optionComparer(option, highlightedValue));\n  }, [highlightedValue, options, optionComparer]);\n\n  // introducing refs to avoid recreating the getOptionState function on each change.\n  const latestSelectedValue = useLatest(selectedValue);\n  const latestHighlightedIndex = useLatest(highlightedIndex);\n  const previousOptions = React.useRef([]);\n  React.useEffect(() => {\n    if (areArraysEqual(previousOptions.current, options, optionComparer)) {\n      return;\n    }\n    dispatch({\n      type: ActionTypes.optionsChange,\n      event: null,\n      options,\n      previousOptions: previousOptions.current\n    });\n    previousOptions.current = options;\n  }, [options, optionComparer, dispatch]);\n  const setSelectedValue = React.useCallback(values => {\n    dispatch({\n      type: ActionTypes.setValue,\n      event: null,\n      value: values\n    });\n  }, [dispatch]);\n  const setHighlightedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setHighlight,\n      event: null,\n      highlight: option\n    });\n  }, [dispatch]);\n  const createHandleOptionClick = React.useCallback((option, other) => event => {\n    var _other$onClick;\n    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    event.preventDefault();\n    dispatch({\n      type: ActionTypes.optionClick,\n      option,\n      event\n    });\n  }, [dispatch]);\n  const createHandleOptionPointerOver = React.useCallback((option, other) => event => {\n    var _other$onMouseOver;\n    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ActionTypes.optionHover,\n      option,\n      event\n    });\n  }, [dispatch]);\n  const createHandleKeyDown = other => event => {\n    var _other$onKeyDown;\n    (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    const keysToPreventDefault = ['ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'];\n    if (focusManagement === 'activeDescendant') {\n      // When the child element is focused using the activeDescendant attribute,\n      // the listbox handles keyboard events on its behalf.\n      // We have to `preventDefault()` is this case to prevent the browser from\n      // scrolling the view when space is pressed or submitting forms when enter is pressed.\n      keysToPreventDefault.push(' ', 'Enter');\n    }\n    if (keysToPreventDefault.includes(event.key)) {\n      event.preventDefault();\n    }\n    dispatch({\n      type: ActionTypes.keyDown,\n      event\n    });\n    handleTextNavigation(event);\n  };\n  const createHandleBlur = other => event => {\n    var _other$onBlur, _listboxRef$current;\n    (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {\n      // focus is within the listbox\n      return;\n    }\n    dispatch({\n      type: ActionTypes.blur,\n      event\n    });\n  };\n  const getRootProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? optionIdGenerator(highlightedValue, highlightedIndex) : undefined,\n      id,\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers),\n      role: 'listbox',\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    });\n  };\n  const getOptionState = React.useCallback(option => {\n    var _latestSelectedValue$;\n    const index = options.findIndex(opt => optionComparer(opt, option));\n    const selected = ((_latestSelectedValue$ = latestSelectedValue.current) != null ? _latestSelectedValue$ : []).some(value => value != null && optionComparer(option, value));\n    const disabled = isOptionDisabled(option, index);\n    const highlighted = latestHighlightedIndex.current === index && index !== -1;\n    return {\n      disabled,\n      highlighted,\n      index,\n      selected\n    };\n  }, [options, isOptionDisabled, optionComparer, latestSelectedValue, latestHighlightedIndex]);\n  const getOptionTabIndex = React.useCallback(optionState => {\n    if (focusManagement === 'activeDescendant') {\n      return undefined;\n    }\n    if (!optionState.highlighted) {\n      return -1;\n    }\n    if (optionState.disabled && !disabledItemsFocusable) {\n      return -1;\n    }\n    return 0;\n  }, [focusManagement, disabledItemsFocusable]);\n  const getOptionProps = React.useCallback((option, otherHandlers = {}) => {\n    const optionState = getOptionState(option);\n    return _extends({}, otherHandlers, {\n      'aria-disabled': optionState.disabled || undefined,\n      'aria-selected': optionState.selected,\n      id: optionIdGenerator(option, optionState.index),\n      onClick: createHandleOptionClick(option, otherHandlers),\n      onPointerOver: createHandleOptionPointerOver(option, otherHandlers),\n      role: 'option',\n      tabIndex: getOptionTabIndex(optionState)\n    });\n  }, [optionIdGenerator, createHandleOptionClick, createHandleOptionPointerOver, getOptionTabIndex, getOptionState]);\n  React.useDebugValue({\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue\n  });\n  return {\n    getRootProps,\n    getOptionProps,\n    getOptionState,\n    highlightedOption: highlightedValue,\n    selectedOption: selectedValue,\n    setSelectedValue,\n    setHighlightedValue\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
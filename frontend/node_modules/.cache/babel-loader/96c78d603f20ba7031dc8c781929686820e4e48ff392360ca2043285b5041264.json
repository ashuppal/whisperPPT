{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useControlled as useControlled, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible, visuallyHidden } from '@mui/utils';\nconst INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\nfunction asc(a, b) {\n  return a - b;\n}\nfunction clamp(value, min, max) {\n  if (value == null) {\n    return min;\n  }\n  return Math.min(Math.max(min, value), max);\n}\nfunction findClosest(values, currentValue) {\n  var _values$reduce;\n  const {\n    index: closestIndex\n  } = (_values$reduce = values.reduce((acc, value, index) => {\n    const distance = Math.abs(currentValue - value);\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance,\n        index\n      };\n    }\n    return acc;\n  }, null)) != null ? _values$reduce : {};\n  return closestIndex;\n}\nfunction trackFinger(event, touchId) {\n  // The event is TouchEvent\n  if (touchId.current !== undefined && event.changedTouches) {\n    const touchEvent = event;\n    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {\n      const touch = touchEvent.changedTouches[i];\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n\n  // The event is MouseEvent\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nexport function valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split('e-');\n    const matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\nfunction setValueIndex(_ref) {\n  let {\n    values,\n    newValue,\n    index\n  } = _ref;\n  const output = values.slice();\n  output[index] = newValue;\n  return output.sort(asc);\n}\nfunction focusThumb(_ref2) {\n  let {\n    sliderRef,\n    activeIndex,\n    setActive\n  } = _ref2;\n  var _sliderRef$current, _doc$activeElement;\n  const doc = ownerDocument(sliderRef.current);\n  if (!((_sliderRef$current = sliderRef.current) != null && _sliderRef$current.contains(doc.activeElement)) || Number(doc == null ? void 0 : (_doc$activeElement = doc.activeElement) == null ? void 0 : _doc$activeElement.getAttribute('data-index')) !== activeIndex) {\n    var _sliderRef$current2;\n    (_sliderRef$current2 = sliderRef.current) == null ? void 0 : _sliderRef$current2.querySelector(`[type=\"range\"][data-index=\"${activeIndex}\"]`).focus();\n  }\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\nconst axisProps = {\n  horizontal: {\n    offset: percent => ({\n      left: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  'horizontal-reverse': {\n    offset: percent => ({\n      right: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  vertical: {\n    offset: percent => ({\n      bottom: `${percent}%`\n    }),\n    leap: percent => ({\n      height: `${percent}%`\n    })\n  }\n};\nexport const Identity = x => x;\n\n// TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\nlet cachedSupportsTouchActionNone;\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n  return cachedSupportsTouchActionNone;\n}\n/**\n *\n * Demos:\n *\n * - [Unstyled Slider](https://mui.com/base/react-slider/#hook)\n *\n * API:\n *\n * - [useSlider API](https://mui.com/base/react-slider/hooks-api/#use-slider)\n */\nexport default function useSlider(parameters) {\n  const {\n    'aria-labelledby': ariaLabelledby,\n    defaultValue,\n    disabled = false,\n    disableSwap = false,\n    isRtl = false,\n    marks: marksProp = false,\n    max = 100,\n    min = 0,\n    name,\n    onChange,\n    onChangeCommitted,\n    orientation = 'horizontal',\n    ref,\n    scale = Identity,\n    step = 1,\n    tabIndex,\n    value: valueProp\n  } = parameters;\n  const touchId = React.useRef();\n  // We can't use the :active browser pseudo-classes.\n  // - The active state isn't triggered when clicking on the rail.\n  // - The active state isn't transferred when inversing a range slider.\n  const [active, setActive] = React.useState(-1);\n  const [open, setOpen] = React.useState(-1);\n  const [dragging, setDragging] = React.useState(false);\n  const moveCount = React.useRef(0);\n  const [valueDerived, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue != null ? defaultValue : min,\n    name: 'Slider'\n  });\n  const handleChange = onChange && ((event, value, thumbIndex) => {\n    // Redefine target to allow name and value to be read.\n    // This allows seamless integration with the most popular form libraries.\n    // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n    // Clone the event to not override `target` of the original event.\n    const nativeEvent = event.nativeEvent || event;\n    // @ts-ignore The nativeEvent is function, not object\n    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n    Object.defineProperty(clonedEvent, 'target', {\n      writable: true,\n      value: {\n        value,\n        name\n      }\n    });\n    onChange(clonedEvent, value, thumbIndex);\n  });\n  const range = Array.isArray(valueDerived);\n  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n  values = values.map(value => clamp(value, min, max));\n  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({\n    value: min + step * index\n  })) : marksProp || [];\n  const marksValues = marks.map(mark => mark.value);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusedThumbIndex, setFocusedThumbIndex] = React.useState(-1);\n  const sliderRef = React.useRef();\n  const handleFocusRef = useForkRef(focusVisibleRef, sliderRef);\n  const handleRef = useForkRef(ref, handleFocusRef);\n  const createHandleHiddenInputFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu;\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusedThumbIndex(index);\n    }\n    setOpen(index);\n    otherHandlers == null ? void 0 : (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n  };\n  const createHandleHiddenInputBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusedThumbIndex(-1);\n    }\n    setOpen(-1);\n    otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n  };\n  useEnhancedEffect(() => {\n    if (disabled && sliderRef.current.contains(document.activeElement)) {\n      var _document$activeEleme;\n      // This is necessary because Firefox and Safari will keep focus\n      // on a disabled element:\n      // https://codesandbox.io/s/mui-pr-22247-forked-h151h?file=/src/App.js\n      // @ts-ignore\n      (_document$activeEleme = document.activeElement) == null ? void 0 : _document$activeEleme.blur();\n    }\n  }, [disabled]);\n  if (disabled && active !== -1) {\n    setActive(-1);\n  }\n  if (disabled && focusedThumbIndex !== -1) {\n    setFocusedThumbIndex(-1);\n  }\n  const createHandleHiddenInputChange = otherHandlers => event => {\n    var _otherHandlers$onChan;\n    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    const value = values[index];\n    const marksIndex = marksValues.indexOf(value);\n\n    // @ts-ignore\n    let newValue = event.target.valueAsNumber;\n    if (marks && step == null) {\n      newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];\n    }\n    newValue = clamp(newValue, min, max);\n    if (marks && step == null) {\n      const currentMarkIndex = marksValues.indexOf(values[index]);\n      newValue = newValue < values[index] ? marksValues[currentMarkIndex - 1] : marksValues[currentMarkIndex + 1];\n    }\n    if (range) {\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\n      }\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index\n      });\n      let activeIndex = index;\n\n      // Potentially swap the index if needed.\n      if (!disableSwap) {\n        activeIndex = newValue.indexOf(previousValue);\n      }\n      focusThumb({\n        sliderRef,\n        activeIndex\n      });\n    }\n    setValueState(newValue);\n    setFocusedThumbIndex(index);\n    if (handleChange) {\n      handleChange(event, newValue, index);\n    }\n    if (onChangeCommitted) {\n      onChangeCommitted(event, newValue);\n    }\n  };\n  const previousIndex = React.useRef();\n  let axis = orientation;\n  if (isRtl && orientation === 'horizontal') {\n    axis += '-reverse';\n  }\n  const getFingerNewValue = _ref3 => {\n    let {\n      finger,\n      move = false\n    } = _ref3;\n    const {\n      current: slider\n    } = sliderRef;\n    const {\n      width,\n      height,\n      bottom,\n      left\n    } = slider.getBoundingClientRect();\n    let percent;\n    if (axis.indexOf('vertical') === 0) {\n      percent = (bottom - finger.y) / height;\n    } else {\n      percent = (finger.x - left) / width;\n    }\n    if (axis.indexOf('-reverse') !== -1) {\n      percent = 1 - percent;\n    }\n    let newValue;\n    newValue = percentToValue(percent, min, max);\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    } else {\n      const closestIndex = findClosest(marksValues, newValue);\n      newValue = marksValues[closestIndex];\n    }\n    newValue = clamp(newValue, min, max);\n    let activeIndex = 0;\n    if (range) {\n      if (!move) {\n        activeIndex = findClosest(values, newValue);\n      } else {\n        activeIndex = previousIndex.current;\n      }\n\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = clamp(newValue, values[activeIndex - 1] || -Infinity, values[activeIndex + 1] || Infinity);\n      }\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index: activeIndex\n      });\n\n      // Potentially swap the index if needed.\n      if (!(disableSwap && move)) {\n        activeIndex = newValue.indexOf(previousValue);\n        previousIndex.current = activeIndex;\n      }\n    }\n    return {\n      newValue,\n      activeIndex\n    };\n  };\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    if (!finger) {\n      return;\n    }\n    moveCount.current += 1;\n\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    // @ts-ignore buttons doesn't not exists on touch event\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    const {\n      newValue,\n      activeIndex\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\n      setDragging(true);\n    }\n    if (handleChange && newValue !== valueDerived) {\n      handleChange(nativeEvent, newValue, activeIndex);\n    }\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    setDragging(false);\n    if (!finger) {\n      return;\n    }\n    const {\n      newValue\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    setActive(-1);\n    if (nativeEvent.type === 'touchend') {\n      setOpen(-1);\n    }\n    if (onChangeCommitted) {\n      onChangeCommitted(nativeEvent, newValue);\n    }\n    touchId.current = undefined;\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n  });\n  const handleTouchStart = useEventCallback(nativeEvent => {\n    if (disabled) {\n      return;\n    }\n    // If touch-action: none; is not supported we need to prevent the scroll manually.\n    if (!doesSupportTouchActionNone()) {\n      nativeEvent.preventDefault();\n    }\n    const touch = nativeEvent.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const finger = trackFinger(nativeEvent, touchId);\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n      if (handleChange) {\n        handleChange(nativeEvent, newValue, activeIndex);\n      }\n    }\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(sliderRef.current);\n    doc.removeEventListener('mousemove', handleTouchMove);\n    doc.removeEventListener('mouseup', handleTouchEnd);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n  }, [handleTouchEnd, handleTouchMove]);\n  React.useEffect(() => {\n    const {\n      current: slider\n    } = sliderRef;\n    slider.addEventListener('touchstart', handleTouchStart, {\n      passive: doesSupportTouchActionNone()\n    });\n    return () => {\n      // @ts-ignore\n      slider.removeEventListener('touchstart', handleTouchStart, {\n        passive: doesSupportTouchActionNone()\n      });\n      stopListening();\n    };\n  }, [stopListening, handleTouchStart]);\n  React.useEffect(() => {\n    if (disabled) {\n      stopListening();\n    }\n  }, [disabled, stopListening]);\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n    (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n    if (disabled) {\n      return;\n    }\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    const finger = trackFinger(event, touchId);\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n      if (handleChange) {\n        handleChange(event, newValue, activeIndex);\n      }\n    }\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('mousemove', handleTouchMove);\n    doc.addEventListener('mouseup', handleTouchEnd);\n  };\n  const trackOffset = valueToPercent(range ? values[0] : min, min, max);\n  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n  const getRootProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const ownEventHandlers = {\n      onMouseDown: createHandleMouseDown(otherHandlers || {})\n    };\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\n    return _extends({\n      ref: handleRef\n    }, mergedEventHandlers);\n  };\n  const createHandleMouseOver = otherHandlers => event => {\n    var _otherHandlers$onMous2;\n    (_otherHandlers$onMous2 = otherHandlers.onMouseOver) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    setOpen(index);\n  };\n  const createHandleMouseLeave = otherHandlers => event => {\n    var _otherHandlers$onMous3;\n    (_otherHandlers$onMous3 = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);\n    setOpen(-1);\n  };\n  const getThumbProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const ownEventHandlers = {\n      onMouseOver: createHandleMouseOver(otherHandlers || {}),\n      onMouseLeave: createHandleMouseLeave(otherHandlers || {})\n    };\n    return _extends({}, otherHandlers, ownEventHandlers);\n  };\n  const getHiddenInputProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _parameters$step;\n    const ownEventHandlers = {\n      onChange: createHandleHiddenInputChange(otherHandlers || {}),\n      onFocus: createHandleHiddenInputFocus(otherHandlers || {}),\n      onBlur: createHandleHiddenInputBlur(otherHandlers || {})\n    };\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\n    return _extends({\n      tabIndex,\n      'aria-labelledby': ariaLabelledby,\n      'aria-orientation': orientation,\n      'aria-valuemax': scale(max),\n      'aria-valuemin': scale(min),\n      name,\n      type: 'range',\n      min: parameters.min,\n      max: parameters.max,\n      step: (_parameters$step = parameters.step) != null ? _parameters$step : undefined,\n      disabled\n    }, mergedEventHandlers, {\n      style: _extends({}, visuallyHidden, {\n        direction: isRtl ? 'rtl' : 'ltr',\n        // So that VoiceOver's focus indicator matches the thumb's dimensions\n        width: '100%',\n        height: '100%'\n      })\n    });\n  };\n  return {\n    active,\n    axis: axis,\n    axisProps,\n    dragging,\n    focusedThumbIndex,\n    getHiddenInputProps,\n    getRootProps,\n    getThumbProps,\n    marks: marks,\n    open,\n    range,\n    trackLeap,\n    trackOffset,\n    values\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_ownerDocument","ownerDocument","unstable_useControlled","useControlled","unstable_useEnhancedEffect","useEnhancedEffect","unstable_useEventCallback","useEventCallback","unstable_useForkRef","useForkRef","unstable_useIsFocusVisible","useIsFocusVisible","visuallyHidden","INTENTIONAL_DRAG_COUNT_THRESHOLD","asc","a","b","clamp","value","min","max","Math","findClosest","values","currentValue","_values$reduce","index","closestIndex","reduce","acc","distance","abs","trackFinger","event","touchId","current","undefined","changedTouches","touchEvent","i","length","touch","identifier","x","clientX","y","clientY","valueToPercent","percentToValue","percent","getDecimalPrecision","num","parts","toExponential","split","matissaDecimalPart","parseInt","decimalPart","toString","roundValueToStep","step","nearest","round","Number","toFixed","setValueIndex","_ref","newValue","output","slice","sort","focusThumb","_ref2","sliderRef","activeIndex","setActive","_sliderRef$current","_doc$activeElement","doc","contains","activeElement","getAttribute","_sliderRef$current2","querySelector","focus","axisProps","horizontal","offset","left","leap","width","right","vertical","bottom","height","Identity","cachedSupportsTouchActionNone","doesSupportTouchActionNone","CSS","supports","useSlider","parameters","ariaLabelledby","defaultValue","disabled","disableSwap","isRtl","marks","marksProp","name","onChange","onChangeCommitted","orientation","ref","scale","tabIndex","valueProp","useRef","active","useState","open","setOpen","dragging","setDragging","moveCount","valueDerived","setValueState","controlled","default","handleChange","thumbIndex","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","range","Array","isArray","map","floor","_","marksValues","mark","isFocusVisibleRef","onBlur","handleBlurVisible","onFocus","handleFocusVisible","focusVisibleRef","focusedThumbIndex","setFocusedThumbIndex","handleFocusRef","handleRef","createHandleHiddenInputFocus","otherHandlers","_otherHandlers$onFocu","currentTarget","call","createHandleHiddenInputBlur","_otherHandlers$onBlur","document","_document$activeEleme","blur","createHandleHiddenInputChange","_otherHandlers$onChan","marksIndex","indexOf","target","valueAsNumber","currentMarkIndex","Infinity","previousValue","previousIndex","axis","getFingerNewValue","_ref3","finger","move","slider","getBoundingClientRect","handleTouchMove","buttons","handleTouchEnd","stopListening","handleTouchStart","preventDefault","addEventListener","useCallback","removeEventListener","useEffect","passive","createHandleMouseDown","_otherHandlers$onMous","onMouseDown","defaultPrevented","button","trackOffset","trackLeap","getRootProps","arguments","ownEventHandlers","mergedEventHandlers","createHandleMouseOver","_otherHandlers$onMous2","onMouseOver","createHandleMouseLeave","_otherHandlers$onMous3","onMouseLeave","getThumbProps","getHiddenInputProps","_parameters$step","style","direction"],"sources":["/Users/ash/Desktop/AshProjects/whisperPPT/frontend/node_modules/@mui/base/useSlider/useSlider.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useControlled as useControlled, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_useForkRef as useForkRef, unstable_useIsFocusVisible as useIsFocusVisible, visuallyHidden } from '@mui/utils';\nconst INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\nfunction asc(a, b) {\n  return a - b;\n}\nfunction clamp(value, min, max) {\n  if (value == null) {\n    return min;\n  }\n  return Math.min(Math.max(min, value), max);\n}\nfunction findClosest(values, currentValue) {\n  var _values$reduce;\n  const {\n    index: closestIndex\n  } = (_values$reduce = values.reduce((acc, value, index) => {\n    const distance = Math.abs(currentValue - value);\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance,\n        index\n      };\n    }\n    return acc;\n  }, null)) != null ? _values$reduce : {};\n  return closestIndex;\n}\nfunction trackFinger(event, touchId) {\n  // The event is TouchEvent\n  if (touchId.current !== undefined && event.changedTouches) {\n    const touchEvent = event;\n    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {\n      const touch = touchEvent.changedTouches[i];\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n\n  // The event is MouseEvent\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nexport function valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split('e-');\n    const matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\nfunction setValueIndex({\n  values,\n  newValue,\n  index\n}) {\n  const output = values.slice();\n  output[index] = newValue;\n  return output.sort(asc);\n}\nfunction focusThumb({\n  sliderRef,\n  activeIndex,\n  setActive\n}) {\n  var _sliderRef$current, _doc$activeElement;\n  const doc = ownerDocument(sliderRef.current);\n  if (!((_sliderRef$current = sliderRef.current) != null && _sliderRef$current.contains(doc.activeElement)) || Number(doc == null ? void 0 : (_doc$activeElement = doc.activeElement) == null ? void 0 : _doc$activeElement.getAttribute('data-index')) !== activeIndex) {\n    var _sliderRef$current2;\n    (_sliderRef$current2 = sliderRef.current) == null ? void 0 : _sliderRef$current2.querySelector(`[type=\"range\"][data-index=\"${activeIndex}\"]`).focus();\n  }\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\nconst axisProps = {\n  horizontal: {\n    offset: percent => ({\n      left: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  'horizontal-reverse': {\n    offset: percent => ({\n      right: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  vertical: {\n    offset: percent => ({\n      bottom: `${percent}%`\n    }),\n    leap: percent => ({\n      height: `${percent}%`\n    })\n  }\n};\nexport const Identity = x => x;\n\n// TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\nlet cachedSupportsTouchActionNone;\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n  return cachedSupportsTouchActionNone;\n}\n/**\n *\n * Demos:\n *\n * - [Unstyled Slider](https://mui.com/base/react-slider/#hook)\n *\n * API:\n *\n * - [useSlider API](https://mui.com/base/react-slider/hooks-api/#use-slider)\n */\nexport default function useSlider(parameters) {\n  const {\n    'aria-labelledby': ariaLabelledby,\n    defaultValue,\n    disabled = false,\n    disableSwap = false,\n    isRtl = false,\n    marks: marksProp = false,\n    max = 100,\n    min = 0,\n    name,\n    onChange,\n    onChangeCommitted,\n    orientation = 'horizontal',\n    ref,\n    scale = Identity,\n    step = 1,\n    tabIndex,\n    value: valueProp\n  } = parameters;\n  const touchId = React.useRef();\n  // We can't use the :active browser pseudo-classes.\n  // - The active state isn't triggered when clicking on the rail.\n  // - The active state isn't transferred when inversing a range slider.\n  const [active, setActive] = React.useState(-1);\n  const [open, setOpen] = React.useState(-1);\n  const [dragging, setDragging] = React.useState(false);\n  const moveCount = React.useRef(0);\n  const [valueDerived, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue != null ? defaultValue : min,\n    name: 'Slider'\n  });\n  const handleChange = onChange && ((event, value, thumbIndex) => {\n    // Redefine target to allow name and value to be read.\n    // This allows seamless integration with the most popular form libraries.\n    // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n    // Clone the event to not override `target` of the original event.\n    const nativeEvent = event.nativeEvent || event;\n    // @ts-ignore The nativeEvent is function, not object\n    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n    Object.defineProperty(clonedEvent, 'target', {\n      writable: true,\n      value: {\n        value,\n        name\n      }\n    });\n    onChange(clonedEvent, value, thumbIndex);\n  });\n  const range = Array.isArray(valueDerived);\n  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n  values = values.map(value => clamp(value, min, max));\n  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({\n    value: min + step * index\n  })) : marksProp || [];\n  const marksValues = marks.map(mark => mark.value);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusedThumbIndex, setFocusedThumbIndex] = React.useState(-1);\n  const sliderRef = React.useRef();\n  const handleFocusRef = useForkRef(focusVisibleRef, sliderRef);\n  const handleRef = useForkRef(ref, handleFocusRef);\n  const createHandleHiddenInputFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu;\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusedThumbIndex(index);\n    }\n    setOpen(index);\n    otherHandlers == null ? void 0 : (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);\n  };\n  const createHandleHiddenInputBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusedThumbIndex(-1);\n    }\n    setOpen(-1);\n    otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);\n  };\n  useEnhancedEffect(() => {\n    if (disabled && sliderRef.current.contains(document.activeElement)) {\n      var _document$activeEleme;\n      // This is necessary because Firefox and Safari will keep focus\n      // on a disabled element:\n      // https://codesandbox.io/s/mui-pr-22247-forked-h151h?file=/src/App.js\n      // @ts-ignore\n      (_document$activeEleme = document.activeElement) == null ? void 0 : _document$activeEleme.blur();\n    }\n  }, [disabled]);\n  if (disabled && active !== -1) {\n    setActive(-1);\n  }\n  if (disabled && focusedThumbIndex !== -1) {\n    setFocusedThumbIndex(-1);\n  }\n  const createHandleHiddenInputChange = otherHandlers => event => {\n    var _otherHandlers$onChan;\n    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    const value = values[index];\n    const marksIndex = marksValues.indexOf(value);\n\n    // @ts-ignore\n    let newValue = event.target.valueAsNumber;\n    if (marks && step == null) {\n      newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];\n    }\n    newValue = clamp(newValue, min, max);\n    if (marks && step == null) {\n      const currentMarkIndex = marksValues.indexOf(values[index]);\n      newValue = newValue < values[index] ? marksValues[currentMarkIndex - 1] : marksValues[currentMarkIndex + 1];\n    }\n    if (range) {\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\n      }\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index\n      });\n      let activeIndex = index;\n\n      // Potentially swap the index if needed.\n      if (!disableSwap) {\n        activeIndex = newValue.indexOf(previousValue);\n      }\n      focusThumb({\n        sliderRef,\n        activeIndex\n      });\n    }\n    setValueState(newValue);\n    setFocusedThumbIndex(index);\n    if (handleChange) {\n      handleChange(event, newValue, index);\n    }\n    if (onChangeCommitted) {\n      onChangeCommitted(event, newValue);\n    }\n  };\n  const previousIndex = React.useRef();\n  let axis = orientation;\n  if (isRtl && orientation === 'horizontal') {\n    axis += '-reverse';\n  }\n  const getFingerNewValue = ({\n    finger,\n    move = false\n  }) => {\n    const {\n      current: slider\n    } = sliderRef;\n    const {\n      width,\n      height,\n      bottom,\n      left\n    } = slider.getBoundingClientRect();\n    let percent;\n    if (axis.indexOf('vertical') === 0) {\n      percent = (bottom - finger.y) / height;\n    } else {\n      percent = (finger.x - left) / width;\n    }\n    if (axis.indexOf('-reverse') !== -1) {\n      percent = 1 - percent;\n    }\n    let newValue;\n    newValue = percentToValue(percent, min, max);\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    } else {\n      const closestIndex = findClosest(marksValues, newValue);\n      newValue = marksValues[closestIndex];\n    }\n    newValue = clamp(newValue, min, max);\n    let activeIndex = 0;\n    if (range) {\n      if (!move) {\n        activeIndex = findClosest(values, newValue);\n      } else {\n        activeIndex = previousIndex.current;\n      }\n\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = clamp(newValue, values[activeIndex - 1] || -Infinity, values[activeIndex + 1] || Infinity);\n      }\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index: activeIndex\n      });\n\n      // Potentially swap the index if needed.\n      if (!(disableSwap && move)) {\n        activeIndex = newValue.indexOf(previousValue);\n        previousIndex.current = activeIndex;\n      }\n    }\n    return {\n      newValue,\n      activeIndex\n    };\n  };\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    if (!finger) {\n      return;\n    }\n    moveCount.current += 1;\n\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    // @ts-ignore buttons doesn't not exists on touch event\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    const {\n      newValue,\n      activeIndex\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\n      setDragging(true);\n    }\n    if (handleChange && newValue !== valueDerived) {\n      handleChange(nativeEvent, newValue, activeIndex);\n    }\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    setDragging(false);\n    if (!finger) {\n      return;\n    }\n    const {\n      newValue\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    setActive(-1);\n    if (nativeEvent.type === 'touchend') {\n      setOpen(-1);\n    }\n    if (onChangeCommitted) {\n      onChangeCommitted(nativeEvent, newValue);\n    }\n    touchId.current = undefined;\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n  });\n  const handleTouchStart = useEventCallback(nativeEvent => {\n    if (disabled) {\n      return;\n    }\n    // If touch-action: none; is not supported we need to prevent the scroll manually.\n    if (!doesSupportTouchActionNone()) {\n      nativeEvent.preventDefault();\n    }\n    const touch = nativeEvent.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const finger = trackFinger(nativeEvent, touchId);\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n      if (handleChange) {\n        handleChange(nativeEvent, newValue, activeIndex);\n      }\n    }\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(sliderRef.current);\n    doc.removeEventListener('mousemove', handleTouchMove);\n    doc.removeEventListener('mouseup', handleTouchEnd);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n  }, [handleTouchEnd, handleTouchMove]);\n  React.useEffect(() => {\n    const {\n      current: slider\n    } = sliderRef;\n    slider.addEventListener('touchstart', handleTouchStart, {\n      passive: doesSupportTouchActionNone()\n    });\n    return () => {\n      // @ts-ignore\n      slider.removeEventListener('touchstart', handleTouchStart, {\n        passive: doesSupportTouchActionNone()\n      });\n      stopListening();\n    };\n  }, [stopListening, handleTouchStart]);\n  React.useEffect(() => {\n    if (disabled) {\n      stopListening();\n    }\n  }, [disabled, stopListening]);\n  const createHandleMouseDown = otherHandlers => event => {\n    var _otherHandlers$onMous;\n    (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);\n    if (disabled) {\n      return;\n    }\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    const finger = trackFinger(event, touchId);\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n      if (handleChange) {\n        handleChange(event, newValue, activeIndex);\n      }\n    }\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('mousemove', handleTouchMove);\n    doc.addEventListener('mouseup', handleTouchEnd);\n  };\n  const trackOffset = valueToPercent(range ? values[0] : min, min, max);\n  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n  const getRootProps = (otherHandlers = {}) => {\n    const ownEventHandlers = {\n      onMouseDown: createHandleMouseDown(otherHandlers || {})\n    };\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\n    return _extends({\n      ref: handleRef\n    }, mergedEventHandlers);\n  };\n  const createHandleMouseOver = otherHandlers => event => {\n    var _otherHandlers$onMous2;\n    (_otherHandlers$onMous2 = otherHandlers.onMouseOver) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    setOpen(index);\n  };\n  const createHandleMouseLeave = otherHandlers => event => {\n    var _otherHandlers$onMous3;\n    (_otherHandlers$onMous3 = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);\n    setOpen(-1);\n  };\n  const getThumbProps = (otherHandlers = {}) => {\n    const ownEventHandlers = {\n      onMouseOver: createHandleMouseOver(otherHandlers || {}),\n      onMouseLeave: createHandleMouseLeave(otherHandlers || {})\n    };\n    return _extends({}, otherHandlers, ownEventHandlers);\n  };\n  const getHiddenInputProps = (otherHandlers = {}) => {\n    var _parameters$step;\n    const ownEventHandlers = {\n      onChange: createHandleHiddenInputChange(otherHandlers || {}),\n      onFocus: createHandleHiddenInputFocus(otherHandlers || {}),\n      onBlur: createHandleHiddenInputBlur(otherHandlers || {})\n    };\n    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);\n    return _extends({\n      tabIndex,\n      'aria-labelledby': ariaLabelledby,\n      'aria-orientation': orientation,\n      'aria-valuemax': scale(max),\n      'aria-valuemin': scale(min),\n      name,\n      type: 'range',\n      min: parameters.min,\n      max: parameters.max,\n      step: (_parameters$step = parameters.step) != null ? _parameters$step : undefined,\n      disabled\n    }, mergedEventHandlers, {\n      style: _extends({}, visuallyHidden, {\n        direction: isRtl ? 'rtl' : 'ltr',\n        // So that VoiceOver's focus indicator matches the thumb's dimensions\n        width: '100%',\n        height: '100%'\n      })\n    });\n  };\n  return {\n    active,\n    axis: axis,\n    axisProps,\n    dragging,\n    focusedThumbIndex,\n    getHiddenInputProps,\n    getRootProps,\n    getThumbProps,\n    marks: marks,\n    open,\n    range,\n    trackLeap,\n    trackOffset,\n    values\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
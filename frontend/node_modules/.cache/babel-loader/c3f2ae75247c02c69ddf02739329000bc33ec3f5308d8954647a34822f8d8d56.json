{"ast":null,"code":"var _jsxFileName = \"/Users/ash/Desktop/AshProjects/whisperPPT/frontend/src/Components/LandingPage.js\";\nimport React from 'react';\nimport { Typography, Button, Container, Box } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = styled('input')({\n  display: 'none'\n});\n_c = Input;\nconst LandingPage = _ref => {\n  let {\n    onUpload\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 6,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Audio to Text Converter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        component: \"p\",\n        gutterBottom: true,\n        children: \"Upload an audio file and get it transcribed using OpenAI's Whisper API.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"upload-button\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"upload-button\",\n          type: \"file\",\n          accept: \"audio/*\",\n          onChange: onUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"span\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c2 = LandingPage;\nexport default LandingPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"LandingPage\");","map":{"version":3,"names":["React","Typography","Button","Container","Box","styled","jsxDEV","_jsxDEV","Input","display","_c","LandingPage","_ref","onUpload","maxWidth","children","sx","mt","mb","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","accept","onChange","_c2","$RefreshReg$"],"sources":["/Users/ash/Desktop/AshProjects/whisperPPT/frontend/src/Components/LandingPage.js"],"sourcesContent":["import React from 'react';\nimport { Typography, Button, Container, Box } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst Input = styled('input')({\n  display: 'none',\n});\n\nconst LandingPage = ({ onUpload }) => {\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ mt: 6, mb: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Audio to Text Converter\n        </Typography>\n        <Typography variant=\"body1\" component=\"p\" gutterBottom>\n          Upload an audio file and get it transcribed using OpenAI's Whisper API.\n        </Typography>\n        <label htmlFor=\"upload-button\">\n          <Input\n            id=\"upload-button\"\n            type=\"file\"\n            accept=\"audio/*\"\n            onChange={onUpload}\n          />\n          <Button variant=\"contained\" component=\"span\">\n            Upload\n          </Button>\n        </label>\n      </Box>\n    </Container>\n  );\n};\n\nexport default LandingPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,MAAM,EAAEC,SAAS,EAAEC,GAAG,QAAQ,eAAe;AAClE,SAASC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,KAAK,GAAGH,MAAM,CAAC,OAAO,CAAC,CAAC;EAC5BI,OAAO,EAAE;AACX,CAAC,CAAC;AAACC,EAAA,GAFGF,KAAK;AAIX,MAAMG,WAAW,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EAC/B,oBACEL,OAAA,CAACJ,SAAS;IAACW,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACtBR,OAAA,CAACH,GAAG;MAACY,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBACxBR,OAAA,CAACN,UAAU;QAACkB,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAACC,YAAY;QAAAN,QAAA,EAAC;MAErD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACblB,OAAA,CAACN,UAAU;QAACkB,OAAO,EAAC,OAAO;QAACC,SAAS,EAAC,GAAG;QAACC,YAAY;QAAAN,QAAA,EAAC;MAEvD;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACblB,OAAA;QAAOmB,OAAO,EAAC,eAAe;QAAAX,QAAA,gBAC5BR,OAAA,CAACC,KAAK;UACJmB,EAAE,EAAC,eAAe;UAClBC,IAAI,EAAC,MAAM;UACXC,MAAM,EAAC,SAAS;UAChBC,QAAQ,EAAEjB;QAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACnB,eACFlB,OAAA,CAACL,MAAM;UAACiB,OAAO,EAAC,WAAW;UAACC,SAAS,EAAC,MAAM;UAAAL,QAAA,EAAC;QAE7C;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAEhB,CAAC;AAACM,GAAA,GAxBIpB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
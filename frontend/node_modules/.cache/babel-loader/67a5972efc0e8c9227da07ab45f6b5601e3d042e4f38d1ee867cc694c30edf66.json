{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultValue\", \"children\", \"component\", \"disabled\", \"error\", \"onChange\", \"required\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nimport FormControlUnstyledContext from './FormControlUnstyledContext';\nimport { getFormControlUnstyledUtilityClass } from './formControlUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0) && value !== '';\n}\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focused && 'focused', error && 'error', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, useClassNamesOverride(getFormControlUnstyledUtilityClass));\n}\n\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n * *   FormLabel\n * *   FormHelperText\n * *   Input\n * *   InputLabel\n *\n * You can find one composition example below and more going to [the demos](https://mui.com/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `Input` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n *\n * Demos:\n *\n * - [Unstyled Form Control](https://mui.com/base/react-form-control/)\n *\n * API:\n *\n * - [FormControlUnstyled API](https://mui.com/base/react-form-control/components-api/#form-control-unstyled)\n */\nconst FormControlUnstyled = /*#__PURE__*/React.forwardRef(function FormControlUnstyled(props, ref) {\n  var _ref;\n  const {\n      defaultValue,\n      children,\n      component,\n      disabled = false,\n      error = false,\n      onChange,\n      required = false,\n      slotProps = {},\n      slots = {},\n      value: incomingValue\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [value, setValue] = useControlled({\n    controlled: incomingValue,\n    default: defaultValue,\n    name: 'FormControl',\n    state: 'value'\n  });\n  const filled = hasValue(value);\n  const [focusedState, setFocused] = React.useState(false);\n  const focused = focusedState && !disabled;\n  React.useEffect(() => setFocused(isFocused => disabled ? false : isFocused), [disabled]);\n  const ownerState = _extends({}, props, {\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  });\n  const childContext = React.useMemo(() => {\n    return {\n      disabled,\n      error,\n      filled,\n      focused,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onChange: event => {\n        setValue(event.target.value);\n        onChange == null ? void 0 : onChange(event);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      required,\n      value: value != null ? value : ''\n    };\n  }, [disabled, error, filled, focused, onChange, required, setValue, value]);\n  const classes = useUtilityClasses(ownerState);\n  const renderChildren = () => {\n    if (typeof children === 'function') {\n      return children(childContext);\n    }\n    return children;\n  };\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      children: renderChildren()\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(FormControlUnstyledContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.node, PropTypes.func]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Callback fired when the form element's value is modified.\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside the FormControl.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the FormControl.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the form element.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useControlled","useControlled","FormControlUnstyledContext","getFormControlUnstyledUtilityClass","useSlotProps","composeClasses","useClassNamesOverride","jsx","_jsx","hasValue","value","Array","isArray","length","useUtilityClasses","ownerState","disabled","error","filled","focused","required","slots","root","FormControlUnstyled","forwardRef","props","ref","_ref","defaultValue","children","component","onChange","slotProps","incomingValue","other","setValue","controlled","default","name","state","focusedState","setFocused","useState","useEffect","isFocused","childContext","useMemo","onBlur","event","target","onFocus","classes","renderChildren","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","className","Provider","process","env","NODE_ENV","propTypes","oneOfType","node","func","any","bool","shape","object"],"sources":["/Users/ash/Desktop/AshProjects/whisperPPT/frontend/node_modules/@mui/base/FormControlUnstyled/FormControlUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultValue\", \"children\", \"component\", \"disabled\", \"error\", \"onChange\", \"required\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nimport FormControlUnstyledContext from './FormControlUnstyledContext';\nimport { getFormControlUnstyledUtilityClass } from './formControlUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0) && value !== '';\n}\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focused && 'focused', error && 'error', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, useClassNamesOverride(getFormControlUnstyledUtilityClass));\n}\n\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n * *   FormLabel\n * *   FormHelperText\n * *   Input\n * *   InputLabel\n *\n * You can find one composition example below and more going to [the demos](https://mui.com/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `Input` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n *\n * Demos:\n *\n * - [Unstyled Form Control](https://mui.com/base/react-form-control/)\n *\n * API:\n *\n * - [FormControlUnstyled API](https://mui.com/base/react-form-control/components-api/#form-control-unstyled)\n */\nconst FormControlUnstyled = /*#__PURE__*/React.forwardRef(function FormControlUnstyled(props, ref) {\n  var _ref;\n  const {\n      defaultValue,\n      children,\n      component,\n      disabled = false,\n      error = false,\n      onChange,\n      required = false,\n      slotProps = {},\n      slots = {},\n      value: incomingValue\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [value, setValue] = useControlled({\n    controlled: incomingValue,\n    default: defaultValue,\n    name: 'FormControl',\n    state: 'value'\n  });\n  const filled = hasValue(value);\n  const [focusedState, setFocused] = React.useState(false);\n  const focused = focusedState && !disabled;\n  React.useEffect(() => setFocused(isFocused => disabled ? false : isFocused), [disabled]);\n  const ownerState = _extends({}, props, {\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  });\n  const childContext = React.useMemo(() => {\n    return {\n      disabled,\n      error,\n      filled,\n      focused,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onChange: event => {\n        setValue(event.target.value);\n        onChange == null ? void 0 : onChange(event);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      required,\n      value: value != null ? value : ''\n    };\n  }, [disabled, error, filled, focused, onChange, required, setValue, value]);\n  const classes = useUtilityClasses(ownerState);\n  const renderChildren = () => {\n    if (typeof children === 'function') {\n      return children(childContext);\n    }\n    return children;\n  };\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      children: renderChildren()\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(FormControlUnstyledContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.node, PropTypes.func]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Callback fired when the form element's value is modified.\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside the FormControl.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the FormControl.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the form element.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}